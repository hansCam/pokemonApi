// readPokemons handlers contract
// AUTOGENERATED FILE, MODIFY WITH CARE
import { RouteHandlerMethod, RouteGenericInterface } from "fastify/types/route";
import {
  RawRequestDefaultExpression,
  RawReplyDefaultExpression,
  RawServerBase,
} from "fastify/types/utils";
import * as t from "io-ts";
import * as http from "http";

export type GetAllPokemon<S extends RawServerBase = http.Server> = RouteHandlerMethod<
  S,
  RawRequestDefaultExpression<S>,
  RawReplyDefaultExpression<S>,
  Required<RouteGenericInterface>
>;
export type AddPokemon<S extends RawServerBase = http.Server> = RouteHandlerMethod<
  S,
  RawRequestDefaultExpression<S>,
  RawReplyDefaultExpression<S>,
  Required<RouteGenericInterface>
>;
export type GetOnePokemon_path = {
  id: string
}
export type GetOnePokemon_generic = {
  Params: GetOnePokemon_path
}
export type GetOnePokemon<S extends RawServerBase = http.Server> = RouteHandlerMethod<
  S,
  RawRequestDefaultExpression<S>,
  RawReplyDefaultExpression<S>,
  Required<RouteGenericInterface> & GetOnePokemon_generic
>;
export type UpdatePokemon_path = {
  id: string
}
export type UpdatePokemon_generic = {
  Params: UpdatePokemon_path
}
export type UpdatePokemon<S extends RawServerBase = http.Server> = RouteHandlerMethod<
  S,
  RawRequestDefaultExpression<S>,
  RawReplyDefaultExpression<S>,
  Required<RouteGenericInterface> & UpdatePokemon_generic
>;
export type DeleteOnePokemon_path = {
  id: string
}
export type DeleteOnePokemon_generic = {
  Params: DeleteOnePokemon_path
}
export type DeleteOnePokemon<S extends RawServerBase = http.Server> = RouteHandlerMethod<
  S,
  RawRequestDefaultExpression<S>,
  RawReplyDefaultExpression<S>,
  Required<RouteGenericInterface> & DeleteOnePokemon_generic
>;

interface ReadPokemonsContract<S extends RawServerBase = http.Server> {
  getAllPokemon: GetAllPokemon<S>;
  addPokemon: AddPokemon<S>;
  getOnePokemon: GetOnePokemon<S>;
  updatePokemon: UpdatePokemon<S>;
  deleteOnePokemon: DeleteOnePokemon<S>;
}

export default ReadPokemonsContract