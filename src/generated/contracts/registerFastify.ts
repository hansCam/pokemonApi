// AUTOGENERATED FILE, MODIFY WITH CARE
//low level
import * as http from "http";
import { RawServerBase } from "fastify/types/utils";
import { FastifyInstance } from "fastify/types/instance";

import {PokemonsSchema} from "../types/Pokemons"
import {PokemonSchema} from "../types/Pokemon"
import ReadPokemonsContract from './ReadPokemonsContract'

export interface Handlers<S extends RawServerBase = http.Server> {
  readPokemons: ReadPokemonsContract<S>
};

export function registerFastify<S extends RawServerBase = http.Server, I extends FastifyInstance<S> = FastifyInstance<S>>(server: I, handlers: Handlers<S>) {
  server.get('/pokemons', {schema: {response: {200: PokemonsSchema}}}, handlers.readPokemons.getAllPokemon);
  server.post('/pokemons', handlers.readPokemons.addPokemon);
  server.get('/pokemons/:id', {schema: {params: {"type":"object","properties":{"id":{"type":"string","description":"name of pokemon"}},"required":["id"]},response: {200: PokemonsSchema}}}, handlers.readPokemons.getOnePokemon);
  server.put('/pokemons/:id', {schema: {params: {"type":"object","properties":{"id":{"type":"string","description":"name of pokemon"}},"required":["id"]}}}, handlers.readPokemons.updatePokemon);
  server.delete('/pokemons/:id', {schema: {params: {"type":"object","properties":{"id":{"type":"string","description":"name of pokemon"}},"required":["id"]}}}, handlers.readPokemons.deleteOnePokemon);
};